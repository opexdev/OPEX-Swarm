x-postgres-db: &postgres-db
  image: ghcr.io/opexdev/postgres-opex:$TAG
  environment:
    - POSTGRES_USER=${DB_USER:-opex}
    - POSTGRES_PASSWORD=${DB_PASS:-hiopex}
    - POSTGRES_READ_ONLY_USER=${DB_READ_ONLY_USER:-opex_reader}
    - POSTGRES_READ_ONLY_PASSWORD=${DB_READ_ONLY_PASS:-hiopex}
  networks:
    - default
  deploy:
    restart_policy:
      condition: on-failure

version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.1.1
    hostname: zookeeper
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-log:/var/lib/zookeeper/log
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOOKEEPER_CLIENT_PORT=2181
    networks:
      - default
    deploy:
      restart_policy:
        condition: on-failure
  kafka-1:
    image: confluentinc/cp-kafka:7.1.1
    hostname: kafka-1
    volumes:
      - kafka-1:/var/lib/kafka/data
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_LISTENERS=CLIENT://kafka-1:29092,EXTERNAL://kafka-1:9092
      - KAFKA_ADVERTISED_LISTENERS=CLIENT://kafka-1:29092,EXTERNAL://kafka-1:9092
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_MIN_INSYNC_REPLICAS=1
      - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
    depends_on:
      - zookeeper
    networks:
      - default
    deploy:
      restart_policy:
        condition: on-failure
  kafka-2:
    image: confluentinc/cp-kafka:7.1.1
    hostname: kafka-2
    volumes:
      - kafka-2:/var/lib/kafka/data
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_LISTENERS=CLIENT://kafka-2:29092,EXTERNAL://kafka-2:9092
      - KAFKA_ADVERTISED_LISTENERS=CLIENT://kafka-2:29092,EXTERNAL://kafka-2:9092
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_MIN_INSYNC_REPLICAS=1
      - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
    depends_on:
      - zookeeper
    networks:
      - default
    deploy:
      restart_policy:
        condition: on-failure
  kafka-3:
    image: confluentinc/cp-kafka:7.1.1
    hostname: kafka-3
    volumes:
      - kafka-3:/var/lib/kafka/data
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_LISTENERS=CLIENT://kafka-3:29092,EXTERNAL://kafka-3:9092
      - KAFKA_ADVERTISED_LISTENERS=CLIENT://kafka-3:29092,EXTERNAL://kafka-3:9092
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_MIN_INSYNC_REPLICAS=1
      - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
    depends_on:
      - zookeeper
    networks:
      - default
    deploy:
      restart_policy:
        condition: on-failure
  akhq:
    image: tchiotludo/akhq:0.20.0
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka-1:29092,kafka-2:29092,kafka-3:29092"
    networks:
      - default
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
    deploy:
      restart_policy:
        condition: on-failure
  vault:
    image: ghcr.io/opexdev/vault-opex:$TAG
    volumes:
      - vault-data:/vault/file
    environment:
      - VAULT_ADDR=http://0.0.0.0:8200
      - PANEL_PASS=${PANEL_PASS}
      - BACKEND_USER=${BACKEND_USER}
      - SMTP_PASS=${SMTP_PASS}
      - DB_USER=${DB_USER:-opex}
      - DB_PASS=${DB_PASS:-hiopex}
      - DB_READ_ONLY_USER=${DB_READ_ONLY_USER:-opex_reader}
      - DB_READ_ONLY_PASS=${DB_READ_ONLY_PASS:-hiopex}
      - KEYCLOAK_ADMIN_USERNAME=${KEYCLOAK_ADMIN_USERNAME:-opex-admin}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD:-hiopex}
      - OPEX_ADMIN_KEYCLOAK_CLIENT_SECRET=${OPEX_ADMIN_KEYCLOAK_CLIENT_SECRET}
      - VANDAR_API_KEY=$VANDAR_API_KEY
    cap_add:
      - IPC_LOCK
    deploy:
      restart_policy:
        condition: on-failure
  vault-ui:
    image: djenriquez/vault-ui
    environment:
      - VAULT_URL_DEFAULT=http://vault:8200
      - VAULT_AUTH_DEFAULT=USERNAMEPASSWORD
    depends_on:
      - vault
    deploy:
      restart_policy:
        condition: on-failure
  consul:
    image: consul
    environment:
      - CONSUL_BIND_INTERFACE=eth0
    networks:
      - default
    deploy:
      restart_policy:
        condition: on-failure
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
      - redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_REPLICATION_MODE=master
    networks:
      - default
    deploy:
      restart_policy:
        condition: on-failure
  postgres-accountant:
    <<: *postgres-db
    volumes:
      - accountant-data:/var/lib/postgresql/data/
  postgres-eventlog:
    <<: *postgres-db
    volumes:
      - eventlog-data:/var/lib/postgresql/data/
  postgres-auth:
    <<: *postgres-db
    volumes:
      - auth-data:/var/lib/postgresql/data/
  postgres-wallet:
    <<: *postgres-db
    volumes:
      - wallet-data:/var/lib/postgresql/data/
  postgres-api:
    <<: *postgres-db
    volumes:
      - api-data:/var/lib/postgresql/data/
  postgres-bc-gateway:
    <<: *postgres-db
    volumes:
      - bc-gateway-data:/var/lib/postgresql/data/
  postgres-referral:
    <<: *postgres-db
    volumes:
      - referral-data:/var/lib/postgresql/data/
  accountant:
    image: ghcr.io/opexdev/accountant:$TAG
    environment:
      - JAVA_OPTS=-Xmx256m -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
      - KAFKA_IP_PORT=kafka-1:29092,kafka-2:29092,kafka-3:29092
      - CONSUL_HOST=consul
      - DB_IP_PORT=postgres-accountant
      - BACKEND_USER=${BACKEND_USER}
      - VAULT_HOST=vault
      - SWAGGER_AUTH_URL=$KEYCLOAK_FRONTEND_URL
      - PREFERENCES=$PREFERENCES
    configs:
      - preferences.yml
    networks:
      - default
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
      - wallet
      - consul
      - vault
      - postgres-accountant
    deploy:
      restart_policy:
        condition: on-failure
  eventlog:
    image: ghcr.io/opexdev/eventlog:$TAG
    environment:
      - JAVA_OPTS=-Xmx256m
      - KAFKA_IP_PORT=kafka-1:29092,kafka-2:29092,kafka-3:29092
      - CONSUL_HOST=consul
      - DB_IP_PORT=postgres-eventlog
      - BACKEND_USER=${BACKEND_USER}
      - VAULT_HOST=vault
    networks:
      - default
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
      - consul
      - vault
      - postgres-eventlog
    deploy:
      restart_policy:
        condition: on-failure
  matching-engine:
    image: ghcr.io/opexdev/matching-engine:$TAG
    environment:
      - JAVA_OPTS=-Xmx256m -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
      - KAFKA_IP_PORT=kafka-1:29092,kafka-2:29092,kafka-3:29092
      - REDIS_HOST=redis
      - PREFERENCES=$PREFERENCES
    configs:
      - preferences.yml
    networks:
      - default
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
      - redis
    deploy:
      restart_policy:
        condition: on-failure
  matching-gateway:
    image: ghcr.io/opexdev/matching-gateway:$TAG
    environment:
      - JAVA_OPTS=-Xmx256m -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
      - KAFKA_IP_PORT=kafka-1:29092,kafka-2:29092,kafka-3:29092
      - CONSUL_HOST=consul
    networks:
      - default
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
      - auth
      - consul
      - matching-engine
    deploy:
      restart_policy:
        condition: on-failure
  auth:
    image: ghcr.io/opexdev/auth:$TAG
    environment:
      - JAVA_OPTS=-Xmx256m -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
      - KAFKA_IP_PORT=kafka-1:29092,kafka-2:29092,kafka-3:29092
      - CONSUL_HOST=consul
      - DB_IP_PORT=postgres-auth
      - BACKEND_USER=$BACKEND_USER
      - ADMIN_URL=$KEYCLOAK_ADMIN_URL
      - FRONTEND_URL=$KEYCLOAK_FRONTEND_URL
      - VERIFY_REDIRECT_URL=$KEYCLOAK_VERIFY_REDIRECT_URL
      - VAULT_URL=http://vault:8200
      - VAULT_HOST=vault
    depends_on:
      - captcha
      - kafka-1
      - kafka-2
      - kafka-3
      - consul
      - vault
      - postgres-auth
    networks:
      - default
    deploy:
      restart_policy:
        condition: on-failure
  wallet:
    image: ghcr.io/opexdev/wallet:$TAG
    environment:
      - JAVA_OPTS=-Xmx256m -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
      - KAFKA_IP_PORT=kafka-1:29092,kafka-2:29092,kafka-3:29092
      - CONSUL_HOST=consul
      - DB_IP_PORT=postgres-wallet
      - BACKEND_USER=${BACKEND_USER}
      - VAULT_HOST=vault
      - SWAGGER_AUTH_URL=$KEYCLOAK_FRONTEND_URL
      - PREFERENCES=$PREFERENCES
    configs:
      - preferences.yml
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
      - auth
      - consul
      - vault
      - postgres-wallet
    networks:
      - default
    deploy:
      restart_policy:
        condition: on-failure
  api:
    image: ghcr.io/opexdev/api:$TAG
    environment:
      - JAVA_OPTS=-Xmx256m -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
      - KAFKA_IP_PORT=kafka-1:29092,kafka-2:29092,kafka-3:29092
      - CONSUL_HOST=consul
      - DB_IP_PORT=postgres-api
      - BACKEND_USER=${BACKEND_USER}
      - VAULT_HOST=vault
      - SWAGGER_AUTH_URL=$KEYCLOAK_FRONTEND_URL
      - PREFERENCES=$PREFERENCES
    configs:
      - preferences.yml
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
      - accountant
      - matching-gateway
      - wallet
      - bc-gateway
      - auth
      - referral
      - consul
      - vault
      - postgres-api
    networks:
      - default
    deploy:
      restart_policy:
        condition: on-failure
  websocket:
    image: ghcr.io/opexdev/websocket:$TAG
    environment:
      - JAVA_OPTS=-Xmx256m -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
      - KAFKA_IP_PORT=kafka-1:29092,kafka-2:29092,kafka-3:29092
      - CONSUL_HOST=consul
      - DB_IP_PORT=postgres-api
      - BACKEND_USER=${BACKEND_USER}
      - VAULT_HOST=vault
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
      - auth
      - consul
      - vault
      - postgres-api
    networks:
      - default
    deploy:
      restart_policy:
        condition: on-failure
  bc-gateway:
    image: ghcr.io/opexdev/bc-gateway:$TAG
    environment:
      - JAVA_OPTS=-Xmx256m -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
      - CONSUL_HOST=consul
      - KAFKA_IP_PORT=kafka-1:29092,kafka-2:29092,kafka-3:29092
      - DB_IP_PORT=postgres-bc-gateway
      - BACKEND_USER=${BACKEND_USER}
      - VAULT_HOST=vault
      - SWAGGER_AUTH_URL=$KEYCLOAK_FRONTEND_URL
      - PREFERENCES=$PREFERENCES
    configs:
      - preferences.yml
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
      - auth
      - wallet
      - consul
      - vault
      - postgres-bc-gateway
    networks:
      - default
    deploy:
      restart_policy:
        condition: on-failure
  storage:
    image: ghcr.io/opexdev/storage:$TAG
    environment:
      - JAVA_OPTS=-Xmx256m -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
      - CONSUL_HOST=consul
      - ROOT_DIR=/storage
      - SWAGGER_AUTH_URL=$KEYCLOAK_FRONTEND_URL
    volumes:
      - storage-data:/storage
    depends_on:
      - auth
      - consul
    networks:
      - default
    deploy:
      restart_policy:
        condition: on-failure
  referral:
    image: ghcr.io/opexdev/referral:$TAG
    environment:
      - JAVA_OPTS=-Xmx256m -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=1044
      - CONSUL_HOST=consul
      - DB_IP_PORT=postgres-referral
      - KAFKA_IP_PORT=kafka-1:29092,kafka-2:29092,kafka-3:29092
      - BACKEND_USER=${BACKEND_USER}
      - VAULT_HOST=vault
      - SWAGGER_AUTH_URL=$KEYCLOAK_FRONTEND_URL
    depends_on:
      - auth
      - accountant
      - kafka-1
      - kafka-2
      - kafka-3
      - consul
      - postgres-referral
      - vault
    deploy:
      restart_policy:
        condition: on-failure
  captcha:
    image: ghcr.io/opexdev/captcha:$TAG
    environment:
      - JAVA_OPTS=-Xmx256m -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=1044
      - CONSUL_HOST=consul
      - SWAGGER_AUTH_URL=$KEYCLOAK_FRONTEND_URL
    depends_on:
      - consul
    deploy:
      restart_policy:
        condition: on-failure
  admin:
    image: ghcr.io/opexdev/admin:$TAG
    environment:
      - JAVA_OPTS=-Xmx256m -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
      - KAFKA_IP_PORT=kafka-1:29092,kafka-2:29092,kafka-3:29092
      - CONSUL_HOST=consul
      - VAULT_HOST=vault
      - BACKEND_USER=${BACKEND_USER}
      - SWAGGER_AUTH_URL=$KEYCLOAK_FRONTEND_URL
    volumes:
      - admin-data:/admin
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
      - consul
      - auth
      - vault
    networks:
      - default
    deploy:
      restart_policy:
        condition: on-failure
volumes:
  zookeeper-data:
  zookeeper-log:
  kafka-1:
  kafka-2:
  kafka-3:
  vault-data:
  redis-data:
  redis.conf:
  accountant-data:
  eventlog-data:
  auth-data:
  wallet-data:
  api-data:
  bc-gateway-data:
  referral-data:
  storage-data:
  admin-data:
networks:
  default:
    driver: overlay
    attachable: true
    driver_opts:
      encrypted: 'yes'
secrets:
  opex_dev_crt:
    file: opex.dev.crt
  private_pem:
    file: private.pem
configs:
  preferences.yml:
    file: preferences.yml
